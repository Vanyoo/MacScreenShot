//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AppInfo {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field5;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field6;
};

struct AppSession {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field2;
};

struct Attachment {
    char _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct vector<char, std::__1::allocator<char>> _field3;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct ExceptionUpload {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
    long long _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field5;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field6;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field7;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field8;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field9;
    struct AppSession _field10;
    int _field11;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field12;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field13;
    struct AppInfo _field14;
    struct vector<rqd::AppInfo, std::__1::allocator<rqd::AppInfo>> _field15;
    struct vector<rqd::AppInfo, std::__1::allocator<rqd::AppInfo>> _field16;
    struct vector<rqd::Attachment, std::__1::allocator<rqd::Attachment>> _field17;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field18;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field19;
};

struct ExceptionUploadPackage {
    struct vector<rqd::ExceptionUpload, std::__1::allocator<rqd::ExceptionUpload>> _field1;
};

struct RequestPkg {
    int _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field5;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field6;
    int _field7;
    struct vector<char, std::__1::allocator<char>> _field8;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field9;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field10;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field11;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field12;
};

struct ResponsePkg {
    char _field1;
    int _field2;
    struct vector<char, std::__1::allocator<char>> _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field4;
    long long _field5;
};

struct SummaryInfo {
    long long _field1;
    char _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field5;
};

struct UserInfoPackage {
    char _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    struct vector<rqd::SummaryInfo, std::__1::allocator<rqd::SummaryInfo>> _field4;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field5;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __darwin_mcontext64 {
    struct __darwin_x86_exception_state64 {
        unsigned short _field1;
        unsigned short _field2;
        unsigned int _field3;
        unsigned long long _field4;
    } _field1;
    struct __darwin_x86_thread_state64 {
        unsigned long long _field1;
        unsigned long long _field2;
        unsigned long long _field3;
        unsigned long long _field4;
        unsigned long long _field5;
        unsigned long long _field6;
        unsigned long long _field7;
        unsigned long long _field8;
        unsigned long long _field9;
        unsigned long long _field10;
        unsigned long long _field11;
        unsigned long long _field12;
        unsigned long long _field13;
        unsigned long long _field14;
        unsigned long long _field15;
        unsigned long long _field16;
        unsigned long long _field17;
        unsigned long long _field18;
        unsigned long long _field19;
        unsigned long long _field20;
        unsigned long long _field21;
    } _field2;
    struct __darwin_x86_float_state64 {
        int _field1[2];
        struct __darwin_fp_control {
            unsigned int :1;
            unsigned int :1;
            unsigned int :1;
            unsigned int :1;
            unsigned int :1;
            unsigned int :1;
            unsigned int :2;
            unsigned int :2;
            unsigned int :2;
            unsigned int :1;
            unsigned int :3;
        } _field2;
        struct __darwin_fp_status {
            unsigned int :1;
            unsigned int :1;
            unsigned int :1;
            unsigned int :1;
            unsigned int :1;
            unsigned int :1;
            unsigned int :1;
            unsigned int :1;
            unsigned int :1;
            unsigned int :1;
            unsigned int :1;
            unsigned int :3;
            unsigned int :1;
            unsigned int :1;
        } _field3;
        unsigned char _field4;
        unsigned char _field5;
        unsigned short _field6;
        unsigned int _field7;
        unsigned short _field8;
        unsigned short _field9;
        unsigned int _field10;
        unsigned short _field11;
        unsigned short _field12;
        unsigned int _field13;
        unsigned int _field14;
        struct __darwin_mmst_reg _field15;
        struct __darwin_mmst_reg _field16;
        struct __darwin_mmst_reg _field17;
        struct __darwin_mmst_reg _field18;
        struct __darwin_mmst_reg _field19;
        struct __darwin_mmst_reg _field20;
        struct __darwin_mmst_reg _field21;
        struct __darwin_mmst_reg _field22;
        struct __darwin_xmm_reg _field23;
        struct __darwin_xmm_reg _field24;
        struct __darwin_xmm_reg _field25;
        struct __darwin_xmm_reg _field26;
        struct __darwin_xmm_reg _field27;
        struct __darwin_xmm_reg _field28;
        struct __darwin_xmm_reg _field29;
        struct __darwin_xmm_reg _field30;
        struct __darwin_xmm_reg _field31;
        struct __darwin_xmm_reg _field32;
        struct __darwin_xmm_reg _field33;
        struct __darwin_xmm_reg _field34;
        struct __darwin_xmm_reg _field35;
        struct __darwin_xmm_reg _field36;
        struct __darwin_xmm_reg _field37;
        struct __darwin_xmm_reg _field38;
        char _field39[96];
        int _field40;
    } _field3;
};

struct __darwin_mmst_reg {
    char _field1[10];
    char _field2[6];
};

struct __darwin_xmm_reg {
    char _field1[16];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
                struct __tree_node_base<void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct vector<char, std::__1::allocator<char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<char *, std::__1::allocator<char>> {
        char *_field1;
    } _field3;
};

struct vector<rqd::AppInfo, std::__1::allocator<rqd::AppInfo>> {
    struct AppInfo *_field1;
    struct AppInfo *_field2;
    struct __compressed_pair<rqd::AppInfo *, std::__1::allocator<rqd::AppInfo>> {
        struct AppInfo *_field1;
    } _field3;
};

struct vector<rqd::Attachment, std::__1::allocator<rqd::Attachment>> {
    struct Attachment *_field1;
    struct Attachment *_field2;
    struct __compressed_pair<rqd::Attachment *, std::__1::allocator<rqd::Attachment>> {
        struct Attachment *_field1;
    } _field3;
};

struct vector<rqd::ExceptionUpload, std::__1::allocator<rqd::ExceptionUpload>> {
    struct ExceptionUpload *_field1;
    struct ExceptionUpload *_field2;
    struct __compressed_pair<rqd::ExceptionUpload *, std::__1::allocator<rqd::ExceptionUpload>> {
        struct ExceptionUpload *_field1;
    } _field3;
};

struct vector<rqd::SummaryInfo, std::__1::allocator<rqd::SummaryInfo>> {
    struct SummaryInfo *_field1;
    struct SummaryInfo *_field2;
    struct __compressed_pair<rqd::SummaryInfo *, std::__1::allocator<rqd::SummaryInfo>> {
        struct SummaryInfo *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    } _field3;
};

